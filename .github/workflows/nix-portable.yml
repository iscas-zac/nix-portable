name: "Build and Release Artefacts"
on:
  pull_request:
  workflow_dispatch:
  push:
    branches: [ "main" ] # 通常只在主分支上构建最终产物

jobs:
  # 这个 job 负责构建两个平台的 nix-portable 二进制文件，并作为构件上传
  build_and_upload_artefacts:
    name: Build for ${{ matrix.system }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        system: [ x86_64-linux, aarch64-linux ]

    steps:
    # 步骤1: 检出代码 (需要完整历史记录以支持 Flakes)
    - name: Checkout repository
      uses: actions/checkout@v5
      with:
          fetch-depth: 0

    # 步骤2: 安装 Nix，并配置 Flakes 和多平台支持
    - name: Install Nix
      uses: cachix/install-nix-action@v31
      with:
        extra_nix_config: |
          experimental-features = nix-command flakes
          extra-platforms = ${{ matrix.system }}

    # 步骤3: 配置 Cachix (只读模式，无需 secrets)
    - name: Setup Cachix
      uses: cachix/cachix-action@v14
      with:
        name: nix-portable
        # 注意: 未提供 authToken，所以这是只读模式

    # 步骤4: 为 aarch64 构建设置 QEMU 模拟器
    - name: Set up QEMU
      if: matrix.system == 'aarch64-linux'
      uses: docker/setup-qemu-action@v2
      with:
        platforms: arm64

    # 步骤5: 执行构建
    - name: Build nix-portable
      run: nix build -L .#packages.${{ matrix.system }}.nix-portable

    # 步骤6: 上传构建产物
    - name: Upload Artefact
      uses: actions/upload-artifact@v4
      with:
        name: nix-portable-${{ matrix.system }}
        path: result/bin/nix-portable
        # 可选: 设置一个保留期限，例如7天
        retention-days: 7
